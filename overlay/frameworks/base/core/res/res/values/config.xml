<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2012, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>8</item>
        <item>12</item>
        <item>20</item>
        <item>33</item>
        <item>55</item>
        <item>90</item>
        <item>148</item>
        <item>245</item>
        <item>403</item>
        <item>665</item>
        <item>1097</item>
        <item>1808</item>
        <item>2981</item>
        <item>5000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
        in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
        config_screenBrightnessMaximumNits, the display brightness is defined as the measured
        brightness of an all-white image.
        If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
        This array should have size one greater than the size of the config_autoBrightnessLevels
        array. The brightness values must be non-negative and non-decreasing. This must be
        overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>10.27811</item>    <!--  0 - 1  -->
        <item>25.5265</item>    <!--  1 - 2  -->
        <item>32.9902384256</item>    <!--  2 - 3  -->
        <item>37.3278742039</item>    <!--  3 - 4  -->
        <item>40.2339130994</item>    <!--  4 - 8  -->
        <item>47.3775896947</item>    <!--  8 - 12  -->
        <item>52.0773980991</item>    <!--  12 - 20  -->
        <item>58.9500178659</item>    <!--  20 - 33  -->
        <item>67.0727661023</item>    <!--  33 - 55  -->
        <item>77.4795277377</item>    <!--  55 - 90  -->
        <item>90.1649821044</item>    <!--  90 - 148  -->
        <item>106.199488897</item>    <!--  148 - 245  -->
        <item>126.920893691</item>    <!--  245 - 403  -->
        <item>155.278937975</item>    <!--  403 - 665  -->
        <item>192.014446343</item>    <!--  665 - 1097  -->
        <item>238.225445161</item>    <!--  1097 - 1808  -->
        <item>292.196984602</item>    <!--  1808 - 2981  -->
        <item>355.964092728</item>    <!--  2981 - 5000  -->
        <item>431.503962344</item>    <!--  5000 - 10000  -->
        <item>546.6433233</item>    <!--  10000+  -->
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
        values in the config_screenBrightnessBacklight array.  On OLED displays these  values
        should be measured with an all white image while the display is in the fully on state.
        Note that this value should *not* reflect the maximum brightness value for any high
        brightness modes but only the maximum brightness value obtainable in a sustainable manner.
        This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>0.95</item>
        <item>3.07</item>
        <item>4.16</item>
        <item>5.43</item>
        <item>6.96</item>
        <item>8.38</item>
        <item>9.79</item>
        <item>22.41</item>
        <item>45.11</item>
        <item>359.46</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
        values in the config_screenBrightnessNits array.
        This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>16</item>
        <item>32</item>
        <item>255</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_ambientThresholdLevels. The brightening threshold is calculated as
        lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
        the screen brightness is recalculated. See the config_ambientThresholdLevels
        description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>9000</item> <!-- 1 -->
        <item>8000</item> <!-- 4 -->
        <item>7000</item> <!-- 12 -->
        <item>5000</item> <!-- 20 -->
        <item>3500</item> <!-- 40 -->
        <item>2500</item> <!-- 65 -->
        <item>2000</item> <!-- 90 -->
        <item>2000</item>
        <item>2000</item>
        <item>2000</item>
        <item>2000</item>
        <item>1500</item>
        <item>1500</item>
        <item>1000</item>
        <item>1000</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_ambientThresholdLevels. The darkening threshold is calculated as
        lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
        the screen brightness is recalculated. See the config_ambientThresholdLevels
        description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
        values by calculating the index to use for lookup and then setting the constraint value
        to the corresponding value of the array. The new brightening hysteresis constraint value
        is the n-th element of config_ambientBrighteningThresholds, and the new darkening
        hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.
        The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
        condition                       calculated index
        value < level[0]                0
        level[n] <= value < level[n+1]  n+1
        level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
    </integer-array>

    <!-- Screen brightness used to dim the screen when the user activity
        timeout expires.  May be less than the minimum allowed brightness setting
        that can be set by the user. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Default screen brightness setting.
        Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">184</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
        The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Maximum screen brightness allowed by the power manager.
         The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- Amount of time it takes for the light sensor to warm up in milliseconds.
         For this time after the screen turns on, the Power Manager
         will not debounce light sensor readings -->
    <integer name="config_lightSensorWarmupTime">200</integer>

    <!-- Fast brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_fast">355</integer>

    <!-- Slow brightness animation ramp rate in brightness units per second-->
    <integer translatable="false" name="config_brightness_ramp_rate_slow">60</integer>

    <!-- Whether or not to skip the initial brightness ramps when the display transitions to
         STATE_ON. Setting this to true will skip the brightness ramp to the last stored active
         brightness value and will repeat for the following ramp if autobrightness is enabled. -->
    <bool name="config_skipScreenOnBrightnessRamp">true</bool>

    <!-- Initial light sensor event rate in milliseconds for automatic brightness control. This is
         used for obtaining the first light sample when the device stops dozing.
         Set this to -1 to disable this feature. -->
    <integer name="config_autoBrightnessInitialLightSensorRate">-1</integer>

    <!-- Default screen brightness for VR setting. Target default value: 0x0BB for EVT1.1. -->
    <!-- 8 bit brightness level of 6 corresponds to the 10 bit brightness level of 0x0B6,
         8 bit brightness level of 7 corresponds to the 10 bit brightness level of 0x0C1 on EVT1.1. -->
    <integer name="config_screenBrightnessForVrSettingDefault">7</integer>
    <integer name="config_screenBrightnessForVrSettingMinimum">6</integer>
    <integer name="config_screenBrightnessForVrSettingMaximum">7</integer>

    <!-- Enable ACS (auto channel selection) for Wifi hotspot (SAP) -->
    <bool translatable="false" name="config_wifi_softap_acs_supported">true</bool>

    <!-- Enable 802.11ac for Wifi hotspot (SAP) -->
    <bool translatable="false" name="config_wifi_softap_ieee80211ac_supported">true</bool>

    <integer translatable="false" name="config_wifi_framework_wifi_score_bad_rssi_threshold_24GHz">-87</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_entry_rssi_threshold_24GHz">-85</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_low_rssi_threshold_24GHz">-73</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_good_rssi_threshold_24GHz">-60</integer>

    <integer translatable="false" name="config_wifi_framework_wifi_score_bad_rssi_threshold_5GHz">-85</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_entry_rssi_threshold_5GHz">-82</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_low_rssi_threshold_5GHz">-70</integer>
    <integer translatable="false" name="config_wifi_framework_wifi_score_good_rssi_threshold_5GHz">-57</integer>

    <!-- Boolean indicating whether or not to revert to default country code when cellular
    radio is unable to find any MCC information to infer wifi country code from -->
    <bool translatable="false" name="config_wifi_revert_country_code_on_cellular_loss">false</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- reference volume index for music stream to limit headphone volume and display warning -->
    <integer name="config_safe_media_volume_index">9</integer>

    <!-- Disable lockscreen translucent decor by default -->
    <bool name="config_enableLockScreenTranslucentDecor">true</bool>

    <!-- Disable rounded corners on windows to improve graphics performance -->
    <bool name="config_supportsRoundedCornersOnWindows">true</bool>

    <!-- Whether device supports wakeup by moving the device -->
    <bool name="config_deviceHaveWakeUpProximity">true</bool>

    <!-- Default value for proximity check on screen wake
         NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">true</bool>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">true</bool>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/priv-app/OnePlusCameraHelper/OnePlusCameraHelper.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>org.lineageos.camerahelper.KeyHandler</item>
    </string-array>

    <!-- System info -->
    <string name="config_sysCPUTemp">/sys/class/thermal/thermal_zone10/temp</string>
    <integer name="config_sysCPUTempMultiplier">1000</integer>
    <string name="config_sysGPUFreq">/sys/devices/platform/soc/2c00000.qcom,kgsl-3d0/kgsl/kgsl-3d0/clock_mhz</string>
    <string name="config_sysGPULoad">/sys/kernel/gpu/gpu_busy</string>
    <string name="config_sysBatteryTemp">/sys/class/power_supply/battery/temp</string>
    <integer name="config_sysBatteryTempMultiplier">10</integer>

    <!-- If we allow automatic adjustment of screen brightness while dozing, how many times we want
         to reduce it to preserve the battery. Value of 100% means no scaling. -->
    <fraction name="config_screenAutoBrightnessDozeScaleFactor">80%</fraction>

    <!-- Whether device supports pickupsensor for AD pulse -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- Whether device supports pickupsensor for AD pulse -->
    <bool name="config_dozePulseProximity">true</bool>

    <!-- Whether device supports wake screen gesture for AD pulse -->
    <bool name="config_dozeWakeLockScreenSensorAvailable">true</bool>

    <!-- Whether device supports sensor based doze customizations -->
    <bool name="config_dozePulseTilt">true</bool>

    <!-- Default state for LiveDisplay -->
    <bool name="config_liveDisplayAvailable">false</bool>

    <!-- The default intensity level for haptic feedback on keyboard usage. -->
    <bool name="config_enableHapticTextHandle">true</bool>

    <!-- The default intensity level for haptic feedback. See
         Settings.System.HAPTIC_FEEDBACK_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultHapticFeedbackIntensity">3</integer>

    <!-- The default intensity level for notification vibrations. See
         Settings.System.NOTIFICATION_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultNotificationVibrationIntensity">3</integer>

    <!-- The default intensity level for call vibrations. See
         Settings.System.RING_VIBRATION_INTENSITY more details on the constant values and
         meanings. -->
    <integer name="config_defaultRingVibrationIntensity">3</integer>

    <!-- Not allow to switch to higher refresh rate when (display, ambient) brightness falls into
         the region defined by the two arrays -->
    <integer-array name="config_brightnessThresholdsOfPeakRefreshRate">
        <item>74</item> <!-- 77% UI brightness -->
    </integer-array>
    <integer-array name="config_ambientThresholdsOfPeakRefreshRate">
        <item>63</item>
    </integer-array>

    <!-- default refresh rate in the zone defined by brightness and ambient thresholds -->
    <integer name="config_defaultRefreshRateInZone">90</integer>

    <!-- The default peak refresh rate for a given device. Change this value if you want to allow
         for higher refresh rates to be automatically used out of the box -->
    <integer name="config_defaultPeakRefreshRate">90</integer>

    <!-- Whether or not Wide Colour Gamut (wcg) mode should be enabled on this device -->
    <bool name="config_enableWcgMode">true</bool>

    <!-- The properties of a UDFPS sensor in pixels, in the order listed below: -->
    <integer-array name="config_udfps_sensor_props" translatable="false" >
        <item>720</item>  <!-- <item>sensorLocationX</item> -->
        <item>2728</item> <!-- <item>sensorLocationY</item> -->
        <item>110</item>  <!-- <item>sensorRadius</item> -->
    </integer-array>

    <!-- How long it takes for the HW to start illuminating after the illuminati -->
    <integer name="config_udfps_illumination_transition_ms">10</integer>

    <!-- Whether or not we should show the option to show battery percentage -->
        <bool name="config_battery_percentage_setting_available">false</bool>
</resources>
